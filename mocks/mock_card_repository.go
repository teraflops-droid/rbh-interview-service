package mocks

import (
	"context"
	"github.com/stretchr/testify/mock"
	"github.com/teraflops-droid/rbh-interview-service/entity"
	"github.com/teraflops-droid/rbh-interview-service/repository"
)

// MockCardRepository is an autogenerated mock type for the CardRepository type
type MockCardRepository struct {
	mock.Mock
}

// Ensure MockCardRepository implements CardRepository
var _ repository.CardRepository = (*MockCardRepository)(nil)

func (m *MockCardRepository) GetAllCards(ctx context.Context, page int, pageSize int) ([]entity.Card, error) {
	args := m.Called(ctx, page, pageSize)
	return args.Get(0).([]entity.Card), args.Error(1)
}

func (m *MockCardRepository) GetCardWithComments(ctx context.Context, cardId uint) (*entity.Card, error) {
	args := m.Called(ctx, cardId)
	return args.Get(0).(*entity.Card), args.Error(1)
}

func (m *MockCardRepository) CreateCard(ctx context.Context, card *entity.Card) (*entity.Card, error) {
	args := m.Called(ctx, card)
	return args.Get(0).(*entity.Card), args.Error(1)
}

func (m *MockCardRepository) EditCard(ctx context.Context, card *entity.Card) (*entity.Card, error) {
	args := m.Called(ctx, card)
	return args.Get(0).(*entity.Card), args.Error(1)
}

func (m *MockCardRepository) UpdateCardStatus(ctx context.Context, cardId uint, newStatus string, updatedBy string) error {
	args := m.Called(ctx, cardId, newStatus, updatedBy)
	return args.Error(0)
}

func (m *MockCardRepository) DeleteCard(ctx context.Context, cardId string) error {
	args := m.Called(ctx, cardId)
	return args.Error(0)
}
